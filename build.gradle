


plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id 'eclipse'
    id 'application'
}

bootBuildImage {
    imageName = "gateway/prod"
}

group = 'com.shell.siep.gto.services'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    maven {
        url 'https://artifactory.geosigns.shell.com/artifactory/maven'
        credentials {
            username "be-generic-reader"
            password "AP573gG94JHGTwaJQqRNdHRcmDV8Rvi1gEhPBy"
        }
    }
    mavenCentral()


}

ext {
	set('springCloudVersion', "Hoxton.SR10")
}

bootRun {
    systemProperties System.properties
}

application {
	mainClass.set("com.shell.siep.gto.services.GatewayApplication")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	maxParallelForks = 4
    failFast = false
    reports.html.enabled = false
}

eclipse {
    project {
        name 'GTO-API'
    }

    jdt {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}


assemble.doLast{
    copy {
        from zipTree("build/libs/${project.name}-${version}.${jar.extension}")
        into "$buildDir/dependency"
    }
}